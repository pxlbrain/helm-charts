apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "aws-alb-ingress.fullname" . }}
  labels:
    app: {{ template "aws-alb-ingress.name" . }}
    chart: {{ template "aws-alb-ingress.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ include "aws-alb-ingress.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
    {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8}}
    {{- end }}
      labels:
        app: {{ template "aws-alb-ingress.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8}}
      {{- end }}
    spec:
      serviceAccountName: {{ template "aws-alb-ingress.serviceAccountName" . }}    
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          args:
            - --cluster-name={{ .Values.clusterName }}
          {{- if .Values.scope.ingressClass }}
            - --ingress-class={{ .Values.scope.ingressClass }}
          {{- end }}
          {{- if .Values.scope.singleNamespace }}
            - --watch-namespace={{ default .Release.Namespace .Values.scope.watchNamespace }}
          {{- end }}
          {{ if not .Values.autoDiscoverAwsRegion }}
            - --aws-region={{ .Values.awsRegion }}
          {{- end }}
          {{- if not .Values.autoDiscoverAwsVpcID }}
            - --aws-vpc-id={{ .Values.awsVpcID }}
          {{- end }}
          {{- range $key, $value := .Values.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          env:
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          ports:
            - containerPort: 10254
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbeInitialDelay }}
            periodSeconds: {{ .Values.readinessProbeInterval }}
            timeoutSeconds: {{ .Values.readinessProbeTimeout }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: {{ add .Values.livenessProbeInitialDelay .Values.readinessProbeInitialDelay }}
            periodSeconds: 60
        {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
        {{- end }}
        {{- if .Values.sidecarContainers }}
{{ toYaml .Values.sidecarContainers | indent 8}}
        {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
